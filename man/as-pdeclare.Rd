% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pdeclare.R
\name{as_pdeclare}
\alias{as_pdeclare}
\alias{as_pdeclare.tbl_df}
\alias{as_pdeclare.data.frame}
\alias{as_pdeclare.list}
\title{Coerce to a pdeclare tibble}
\usage{
as_pdeclare(x, .i = NULL, .d = NULL, .t = NULL, ...)

\method{as_pdeclare}{tbl_df}(x, .i = NULL, .d = NULL, .t = NULL, ...)

\method{as_pdeclare}{data.frame}(x, .i = NULL, .d = NULL, .t = NULL,
  ...)

\method{as_pdeclare}{list}(x, .i = NULL, .d = NULL, .t = NULL, ...)
}
\arguments{
\item{x}{A data frame, tibble or list}

\item{.i}{Character or character vector with the variable names that identify the individual cases. If this is omitted, \code{pdeclare} will assume the data set is a single time series.}

\item{.d}{Number indicating the gap in \code{t} between one period and the next. For example, if \code{.t} indicates a single day but data is collected once a week, you might set \code{.d=7}. To ignore gap length and assume that "one period ago" is always the most recent prior observation in the data, set \code{.d=0}. By default, \code{.d=1}.}

\item{.t}{Character variable with the single variable name indicating the time. \code{pmdplyr} accepts two kinds of time variables: numeric variables where a fixed distance \code{.d} will take you from one observation to the next, or, if \code{.d=0}, any standard variable type with an order. Consider using the \code{time_variable()} function to create the necessary variable if your data uses a \code{Date} variable for time.}
}
\description{
Coerce to a pdeclare tibble
}
\examples{
SP <- as_pdeclare(SPrail,
                  .i = c('origin', 'destination'),
                  .t = 'insert_date',
                  .d = 0)
}
